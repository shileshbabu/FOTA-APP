start.pid 1
#!/bin/sh

### BEGIN INIT INFO
# Provides:          mosquitto
# Required-Start:    $network
# Required-Stop:     $network
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: Mosquitto MQTT Broker
# Description:       Starts the Mosquitto MQTT broker
### END INIT INFO

DAEMON=/usr/sbin/mosquitto
DAEMON_OPTS="-c /etc/mosquitto/mosquitto.conf"
PIDFILE=/var/run/mosquitto.pid

start() {
    echo "Starting Mosquitto MQTT Broker"
    start-stop-daemon --start --background --make-pidfile --pidfile $PIDFILE --exec $DAEMON -- $DAEMON_OPTS
}

stop() {
    echo "Stopping Mosquitto MQTT Broker"
    start-stop-daemon --stop --pidfile $PIDFILE
}

case "$1" in
  start)
    start
    ;;
  stop)
    stop
    ;;
  restart)
    stop
    sleep 1
    start
    ;;
  *)
    echo "Usage: $0 {start|stop|restart}"
    exit 1
esac

exit 0

-------

#! /bin/sh



# Based on the Debian initscript for mosquitto



### BEGIN INIT INFO

# Provides:         app

# Required-Start:   $remote_fs $syslog

# Required-Stop:    $remote_fs $syslog

# Default-Start:    2 3 4 5

# Default-Stop:     0 1 6

# Short-Description:    app start message

# Description: 

#  This is a appname that supports version

#  

#  

#  where a sensor or other simple device may be implemented using an arduino for

#  example.

### END INIT INFO



set -e



PIDFILE=/var/run/app.pid

DAEMON=/usr/sbin/App

# start and stop the app message



test -x ${DAEMON} || exit 0



umask 022



. /etc/init.d/functions



export LD_LIBRARY_PATH="/usr/local/lib/"

#export PATH="${PATH:+$PATH:}/usr/sbin:/sbin"



case "$1" in

    start)

        echo "Starting app message " "app"

        if start-stop-daemon --start --quiet --oknodo --background --make-pidfile --pidfile ${PIDFILE} --exec ${DAEMON} ; then

            exit 0

        else

            exit 1

        fi

        ;;

    stop)

        echo "Stopping app message " "aapp"

        if start-stop-daemon --stop --quiet --oknodo --pidfile ${PIDFILE}; then

            rm -f ${PIDFILE}

            exit 0

        else

            exit 1

        fi

        ;;





    reload|force-reload)

        if [ -f ${PIDFILE} ] ; then

            echo "Reloading configuration for app"

            pid=`cat ${PIDFILE}`

            kill -HUP $pid

        else

            echo "app does not seem to be running"

        fi

        ;;



    restart)

        echo "Restarting app  message" "app"

        if start-stop-daemon --stop --quiet --oknodo --retry 30 --pidfile ${PIDFILE}; then

            rm -f ${PIDFILE}

        fi

        if start-stop-daemon --start --quiet --oknodo --background --make-pidfile --pidfile ${PIDFILE} --exec ${DAEMON} ; then

            exit 0

        else

            exit 1

        fi

        ;;



    status)

        status ${DAEMON} && exit 0 || exit $?

        ;;



    *)

        echo "Usage: $0 {start|stop|reload|force-reload|restart|status}"

        exit 1

esac



exit 0
